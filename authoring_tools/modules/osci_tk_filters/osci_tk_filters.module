<?php

/***********************************************************************
 *
 * Drupal Hooks
 *
 */

function osci_tk_filters_init() {
    drupal_add_js(libraries_get_path('fancybox').'/fancybox/jquery.fancybox-1.3.4.js', array('weight' => '5'));
    drupal_add_css(libraries_get_path('fancybox').'/fancybox/jquery.fancybox-1.3.4.css');
    drupal_add_js(drupal_get_path('module', 'osci_tk_filters').'/js/osci_tk_filters.js', array('weight' => '5'));
    drupal_add_css(drupal_get_path('module', 'osci_tk_filters').'/css/osci_tk_filters.css');
    $settings = array(
        'osci_tk_filters' => array(
            'modulePath' => base_path().drupal_get_path('module', 'osci_tk_filters'),
			'current_nid' => arg(1)
        ),
    );
    drupal_add_js($settings, 'setting');
}

function osci_tk_filters_theme()
{
    return array(
        'osci_tk_figure_link' => array(
            'template'  => 'templates/osci_tk_figure_link',
            'variables' => array(
                'section'   => NULL,
                'figure'    => NULL,
                'fig_index' => NULL,
                'fig_id'    => null,
                'fig_text'  => null
            )
        ),
        'osci_tk_footnote_link' => array(
            'template'  => 'templates/osci_tk_footnote_link',
            'variables' => array(
                'footnote_id' => NULL,
                'footnote_index' => null
            )
        ),
    );
}

/**
 * Implementation of hook_filter_info
 */
function osci_tk_filters_filter_info() {
    $filters = array();

    // Footnotes
    $filters['osci_tk_footnote_reference'] = array(
        'title'             => t('Footnote Reference filter'),
        'description'       => t('Add references to footnotes in content'),
        'process callback'  => '_filter_footnote',
        'settings callback' => '_filter_settings',
        'tips callback'     => '_filter_footnote_tips',
		'cache'				=> false
    );

    $filters['osci_tk_figure'] = array(
        'title'             => t('Figure filter'),
        'description'       => t('Add figures to the content inline'),
        'process callback'  => '_filter_figure',
        'settings callback' => '_filter_settings',
        'tips callback'     => '_filter_figure_tips',
		'cache'				=> false
    );

    $filters['osci_tk_figure_reference'] = array(
        'title'             => t('Figure Reference filter'),
        'description'       => t('Add references to figures in content'),
        'process callback'  => '_filter_figure_reference',
        'settings callback' => '_filter_settings',
        'tips callback'     => '_filter_figure_reference_tips',
        'cache'             => false
    );
    
    $filters['osci_tk_cross_link'] = array(
        'title'             => t('Cross Link filter'),
        'description'       => t('Allow cross content linking within a book'),
        'process callback'  => '_filter_cross_link',
        'settings callback' => '_filter_settings',
        'tips callback'     => '_filter_cross_link_tips',
		'cache'				=> false
    );

    $filters['osci_tk_clean_content'] = array(
        'title'             => t('Clean Content'),
        'description'       => t('Remove encoded html entities and replace with proper characters.'),
        'process callback'  => '_filter_clean_content',
        'settings callback' => '_filter_settings',
        'tips callback'     => '_filter_clean_content_tips',
        'cache'             => false
    );

    return $filters;
}

/**
 * Implementation of hook_wysiwyg_plugin
 */
function osci_tk_filters_wysiwyg_plugin($editor, $version) {
    switch($editor) {
        case 'ckeditor':
            return array(
                'osci_tk_filters' => array(
                    'path'      => drupal_get_path('module', 'osci_tk_filters').'/js',
                    'buttons'   => array(
                        'footnote_reference'  => t('OSCI - Footnote Reference'),
                        'figure_reference'    => t('OSCI - Figure Reference'),
                        'figure'              => t('OSCI - Figure'),
                    ),
                    'load'      => TRUE,
                ),
            );
            break;
    }
}

/**
 * Empty settings function, seems to be required by hook_filter_info
 */
function _filter_settings() {}

/***********************************************************************
 *
 * FOOTNOTE
 *
 */

/**
 * Process callback for filter
 */
function _filter_footnote($text, $filter, $format) {
	global $osci_tk_view_mode;
	
	$osci_tk_view_mode = isset($osci_tk_view_mode) ? $osci_tk_view_mode : 'full';
    $theme = 'osci_tk_footnote_link__' . $osci_tk_view_mode;

    $filtered = $text;
    $regex = '/\[footnoteref:(fn-\d+-(\d+))\]/i';
    $matches = array();
    preg_match_all($regex, $text, $matches);
    foreach ($matches[0] as $index => $match) {
        $replace = theme($theme, array(
            'footnote_id'       => $matches[1][$index],
            'footnote_index'    => $matches[2][$index]
        ));
        $filtered = str_replace($match, $replace, $filtered);
    }

    return $filtered;
}

/**
 * Tooltip funcion
 */
function _filter_footnote_tips() {
    return t('Insert a footnote with [footnoteref:ID]');
}

/***********************************************************************
 *
 * FIGURE
 *
 */

function _filter_figure($text, $filter, $format) 
{
	global $osci_tk_view_mode, $osci_tk_placed_figures;

	$osci_tk_view_mode = isset($osci_tk_view_mode) ? $osci_tk_view_mode : 'default';

    $theme = 'osci_tk_figure_formatter__' . $osci_tk_view_mode;
    $filtered = $text;

    $regex = '/<p>(\[figure:fig-\d+-\d+\])<\/p>/i';
    $matches = array();
    preg_match_all($regex, $text, $matches);
    dpm($matches);
    foreach ($matches[0] as $index => $match) 
    {
        $filtered = str_replace($match, $matches[1][$index], $filtered);
    }

    //place these figures inline without reference
    $regex = '/\[figure:(fig-(\d+)-(\d+))\]/i';
    $matches = array();
    $osci_tk_placed_figures = is_array($osci_tk_placed_figures) ? $osci_tk_placed_figures : array();
    preg_match_all($regex, $filtered, $matches);
    foreach ($matches[0] as $index => $match) {
        $args = _osci_tk_filter_process_args($matches[1][$index]);
        $section_id = $matches[2][$index];
        $fig_index = $matches[3][$index];
        $section_node = node_load($section_id);

        if ($section_node) {
            if (isset($section_node->field_figure['und'][$fig_index])) {
                $figure = $section_node->field_figure['und'][$fig_index];
                $osci_tk_placed_figures[] = $fig_index;
                $figure['delta'] = $fig_index;
                $figure['fig_id'] = _osci_tk_figure_create_id($section_id, $fig_index);
                $figure['number_template'] = _osci_tk_figure_process_number_template($figure);
                $figure['export'] = $osci_tk_view_mode === 'epub' ? true : false;

                $markup = theme($theme, array(
                    'item' => $figure
                ));
                $filtered = str_replace($match, $markup, $filtered);
            }
        }
    }

    return $filtered;
}

function _filter_figure_tips() {
    return t('Insert a figure with [figure:ID]');
}


/***********************************************************************
 *
 * FIGURE Reference
 *
 */

function _filter_figure_reference($text, $filter, $format) 
{
    global $osci_tk_view_mode, $osci_tk_placed_figures;

    $osci_tk_view_mode = isset($osci_tk_view_mode) ? $osci_tk_view_mode : 'default';

    $filtered = $text;

    //place a figure reference for these figures
    $theme = 'osci_tk_figure_link__' . $osci_tk_view_mode;
    $regex = '/\[figureref:(fig-(\d+)-(\d+))\]/i';
    $matches = array();
    preg_match_all($regex, $text, $matches);
    foreach ($matches[0] as $index => $match) {
        $args = _osci_tk_filter_process_args($matches[1][$index]);
        $section_id = $matches[2][$index];
        $fig_index = $matches[3][$index];
        $section_node = node_load($section_id);
        if ($section_node) {
            if (isset($section_node->field_figure['und'][$fig_index])) {
                $figure = $section_node->field_figure['und'][$fig_index];
                $figure['delta'] = $fig_index;
                $markup = theme($theme, array(
                    'section'   => $section_node, 
                    'figure'    => $section_node->field_figure['und'][$fig_index],
                    'fig_index' => $fig_index,
                    'fig_id'    => _osci_tk_figure_create_id($section_id, $fig_index),
                    'fig_text'  => _osci_tk_figure_process_number_template($figure)
                ));
                $filtered = str_replace($match, $markup, $filtered);
            }
        }
    }

    return $filtered;
}

function _filter_figure_reference_tips() {
    return t('Insert a figure reference with [figureref:ID]');
}
/************** INSERT OTHER FILTER FUNCTIONS HERE ********************/


/***********************************************************************
 *
 * HELPER FUNCTIONS
 *
 */

/*
 * @param $text
 * A string of text with arguments
 * @return
 * A keyed array with id and args
 */
function _osci_tk_filter_process_args($text) {
    $data = array();
    $temp = explode('|', $text);
    if (isset($temp[0])) {
        $data['id'] = $temp[0];
    }
    
    if (isset($temp[1])) {
        $args = explode(',', $temp[1]);

        foreach ($args as $val) {
            $arg = explode('=', $val);
            if (isset($arg[0]) && isset($arg[1])) {
                $data['args'][$arg[0]] = $arg[1];
            }
        }
    }

    return $data;
}

/***********************************************************************
 *
 * Cross linking
 *
 */

/**
 * Process callback for filter
 */
function _filter_cross_link($text, $filter, $format) {
	global $osci_tk_view_mode;
	
	$osci_tk_view_mode = isset($osci_tk_view_mode) ? $osci_tk_view_mode : 'default';
	$result = module_invoke_all('osci_tk_filter_cross_link_' . $osci_tk_view_mode, $text, $filter, $format);
	return is_array($result) && count($result) ? $result[0] : $text;
}

function osci_tk_filters_osci_tk_filter_cross_link_default($text, $filter, $format)
{
    $regex = '/\[link:(.*?)\]/i';

    return preg_replace_callback($regex, '_process_cross_link', $text);
}

/**
 * Regex replace callback
 */
function _process_cross_link($text) {
    if (empty($text[1])) return $text[0];
    $args = _osci_tk_filter_process_args($text[1]);

    $nid = $args['id'];
    $url = url("node/{$nid}/reader");
    $linkText = isset($args['args']['text']) ? $args['args']['text'] : "Link " . $nid;
    
    $query = "";
    if (isset($args['args']['paragraph'])) {
        $query = "#para-" . $args['args']['paragraph'];
    }
    
    if (isset($args['args']['section'])) {
        $query = '#field_' . $args['args']['section'] . '_anchor';
    }
    
    if ($query) {
        $url = url("node/{$nid}/reader", array('fragment' => substr($query, 1)));
        $query = "data-query=\"$query\"";
    }

    return "<a href=\"{$url}\" class=\"cross-link\" target=\"_blank\" data-nid=\"{$nid}\" {$query}>{$linkText}</a>";
}

/**
 * Tooltip funcion
 */
function _filter_cross_link_tips() {
    return t('Insert a Link with [link:Node ID]');
}

/***********************************************************************
 *
 * Clean Content
 *
 */

/**
 * Process callback for filter
 */
function _filter_clean_content($text, $filter, $format) 
{
    $convertChars = array(
        '&quot;','&amp;','&apos;','&lt;','&gt;','&nbsp;','&iexcl;','&cent;','&pound;','&curren;','&yen;','&brvbar;','&sect;','&uml;','&copy;',
        '&ordf;','&laquo;','&not;','&shy;','&reg;','&macr;','&deg;','&plusmn;','&sup2;','&sup3;','&acute;','&micro;','&para;','&middot;',
        '&cedil;','&sup1;','&ordm;','&raquo;','&frac14;','&frac12;','&frac34;','&iquest;','&Agrave;','&Aacute;','&Acirc;','&Atilde;','&Auml;',
        '&Aring;','&AElig;','&Ccedil;','&Egrave;','&Eacute;','&Ecirc;','&Euml;','&Igrave;','&Iacute;','&Icirc;','&Iuml;','&ETH;','&Ntilde;',
        '&Ograve;','&Oacute;','&Ocirc;','&Otilde;','&Ouml;','&times;','&Oslash;','&Ugrave;','&Uacute;','&Ucirc;','&Uuml;','&Yacute;','&THORN;',
        '&szlig;','&agrave;','&aacute;','&acirc;','&atilde;','&auml;','&aring;','&aelig;','&ccedil;','&egrave;','&eacute;','&ecirc;','&euml;',
        '&igrave;','&iacute;','&icirc;','&iuml;','&eth;','&ntilde;','&ograve;','&oacute;','&ocirc;','&otilde;','&ouml;','&divide;','&oslash;','&ugrave;',
        '&uacute;','&ucirc;','&uuml;','&yacute;','&thorn;','&yuml;','&OElig;','&oelig;','&Scaron;','&scaron;','&Yuml;','&fnof;','&circ;','&tilde;',
        '&Alpha;','&Beta;','&Gamma;','&Delta;','&Epsilon;','&Zeta;','&Eta;','&Theta;','&Iota;','&Kappa;','&Lambda;','&Mu;','&Nu;','&Xi;',
        '&Omicron;','&Pi;','&Rho;','&Sigma;','&Tau;','&Upsilon;','&Phi;','&Chi;','&Psi;','&Omega;','&alpha;','&beta;','&gamma;','&delta;','&epsilon;',
        '&zeta;','&eta;','&theta;','&iota;','&kappa;','&lambda;','&mu;','&nu;','&xi;','&omicron;','&pi;','&rho;','&sigmaf;','&sigma;','&tau;',
        '&upsilon;','&phi;','&chi;','&psi;','&omega;','&thetasym;','&upsih;','&piv;','&ensp;','&emsp;','&thinsp;','&zwnj;','&zwj;','&lrm;','&rlm;',
        '&ndash;','&mdash;','&lsquo;','&rsquo;','&sbquo;','&ldquo;','&rdquo;','&bdquo;','&dagger;','&Dagger;','&bull;','&hellip;','&permil;',
        '&prime;','&Prime;','&lsaquo;','&rsaquo;','&oline;','&frasl;','&euro;','&image;','&weierp;','&real;','&trade;','&alefsym;','&larr;','&uarr;',
        '&rarr;','&darr;','&harr;','&crarr;','&lArr;','&uArr;','&rArr;','&dArr;','&hArr;','&forall;','&part;','&exist;','&empty;','&nabla;','&isin;',
        '&notin;','&ni;','&prod;','&sum;','&minus;','&lowast;','&radic;','&prop;','&infin;','&ang;','&and;','&or;','&cap;','&cup;','&int;','&there4;',
        '&sim;','&cong;','&asymp;','&ne;','&equiv;','&le;','&ge;','&sub;','&sup;','&nsub;','&sube;','&supe;','&oplus;','&otimes;','&perp;','&sdot;',
        '&lceil;','&rceil;','&lfloor;','&rfloor;','&lang;','&rang;','&loz;','&spades;','&clubs;','&hearts;','&diams;',
    );

    $toChars = array(
        '&#34;','&#38;','&#39;','&#60;','&#62;','&#160;','&#161;','&#162;','&#163;','&#164;','&#165;','&#166;','&#167;','&#168;','&#169;','&#170;',
        '&#171;','&#172;','&#173;','&#174;','&#175;','&#176;','&#177;','&#178;','&#179;','&#180;','&#181;','&#182;','&#183;','&#184;','&#185;',
        '&#186;','&#187;','&#188;','&#189;','&#190;','&#191;','&#192;','&#193;','&#194;','&#195;','&#196;','&#197;','&#198;','&#199;','&#200;',
        '&#201;','&#202;','&#203;','&#204;','&#205;','&#206;','&#207;','&#208;','&#209;','&#210;','&#211;','&#212;','&#213;','&#214;','&#215;',
        '&#216;','&#217;','&#218;','&#219;','&#220;','&#221;','&#222;','&#223;','&#224;','&#225;','&#226;','&#227;','&#228;','&#229;','&#230;',
        '&#231;','&#232;','&#233;','&#234;','&#235;','&#236;','&#237;','&#238;','&#239;','&#240;','&#241;','&#242;','&#243;','&#244;','&#245;',
        '&#246;','&#247;','&#248;','&#249;','&#250;','&#251;','&#252;','&#253;','&#254;','&#255;','&#338;','&#339;','&#352;','&#353;','&#376;',
        '&#402;','&#710;','&#732;','&#913;','&#914;','&#915;','&#916;','&#917;','&#918;','&#919;','&#920;','&#921;','&#922;','&#923;','&#924;',
        '&#925;','&#926;','&#927;','&#928;','&#929;','&#931;','&#932;','&#933;','&#934;','&#935;','&#936;','&#937;','&#945;','&#946;','&#947;',
        '&#948;','&#949;','&#950;','&#951;','&#952;','&#953;','&#954;','&#955;','&#956;','&#957;','&#958;','&#959;','&#960;','&#961;','&#962;',
        '&#963;','&#964;','&#965;','&#966;','&#967;','&#968;','&#969;','&#977;','&#978;','&#982;','&#8194;','&#8195;','&#8201;','&#8204;','&#8205;',
        '&#8206;','&#8207;','&#8211;','&#8212;','&#8216;','&#8217;','&#8218;','&#8220;','&#8221;','&#8222;','&#8224;','&#8225;','&#8226;','&#8230;',
        '&#8240;','&#8242;','&#8243;','&#8249;','&#8250;','&#8254;','&#8260;','&#8364;','&#8465;','&#8472;','&#8476;','&#8482;','&#8501;','&#8592;',
        '&#8593;','&#8594;','&#8595;','&#8596;','&#8629;','&#8656;','&#8657;','&#8658;','&#8659;','&#8660;','&#8704;','&#8706;','&#8707;','&#8709;',
        '&#8711;','&#8712;','&#8713;','&#8715;','&#8719;','&#8721;','&#8722;','&#8727;','&#8730;','&#8733;','&#8734;','&#8736;','&#8743;','&#8744;',
        '&#8745;','&#8746;','&#8747;','&#8756;','&#8764;','&#8773;','&#8776;','&#8800;','&#8801;','&#8804;','&#8805;','&#8834;','&#8835;','&#8836;',
        '&#8838;','&#8839;','&#8853;','&#8855;','&#8869;','&#8901;','&#8968;','&#8969;','&#8970;','&#8971;','&#9001;','&#9002;','&#9674;','&#9824;',
        '&#9827;','&#9829;','&#9830;',
    );

    return str_replace($convertChars, $toChars, $text);

    //return html_entity_decode($text, ENT_QUOTES, 'UTF-8');
}



/**
 * Tooltip funcion
 */
function _filter_clean_content_tips() {
    return null;
}