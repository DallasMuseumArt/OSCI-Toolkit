<?php

function osci_tk_citations_menu() {
	$items = array();

	$items['api/citations'] = array(
		'title'			 	=> t('Process a citation request'),
		'page callback'	 	=> 'osci_tk_citations_request',
		'access callback'	=> TRUE
	);

	$items['api/citations/demo'] = array(
		'title'			 	=> t('Demonstrate Citation API'),
		'page callback'		=> 'drupal_get_form',
		'page arguments' 	=> array('osci_tk_citations_demo'),
		'access callback'	=> TRUE
	);

	return $items;
}

function osci_tk_citations_request() {

	if (isset($_GET['publication_id']) && !empty($_GET['publication_id'])
		&& isset($_GET['section_id']) && !empty($_GET['section_id'])
		&& isset($_GET['element_id']) && !empty($_GET['element_id'])) {
		
		$pid = $_GET['publication_id'];
		$sid = $_GET['section_id'];
		$eid = $_GET['element_id'];
		$revTime = isset($_GET['revision']) ? $_GET['revision'] : time();
		
		// load the section node and its book-parent section. if no parent, use itself
		//TODO: MAKE SURE THIS IS A PUBLICATION
		$publication = node_load($pid, _osci_tk_utility_retrieve_revision_id_by_timestamp($pid, $revTime));
		$section = node_load($sid, _osci_tk_utility_retrieve_revision_id_by_timestamp($sid, $revTime));
		dpm($publication);
		// for missing values on the section, inherit from the publication-parent section
		if ((!isset($section->field_osci_tk_creator) || empty($section->field_osci_tk_creator)) && isset($publication->field_osci_tk_creator)) {
			$section->field_osci_tk_creator = $publication->field_osci_tk_creator;
		}
		if ((!isset($section->field_osci_tk_publisher) || empty($section->field_osci_tk_publisher)) && isset($publication->field_osci_tk_publisher)) {
			$section->field_osci_tk_publisher = $publication->field_osci_tk_publisher;
		}
		if ((!isset($section->publication_date) || empty($section->publication_date)) && isset($publication->publication_date)) {
			$section->publication_date = $publication->publication_date;
		}
		if ((!isset($section->editor) || empty($section->editor)) && isset($publication->editor)) {
			$section->editor = $publication->editor;
		}
		
		// output the json response
		print json_encode(array(
			'success' => TRUE, 
			'citation' => array(
				'author' 			=> $section->author,
				'section_title' 	=> $section->title,
				'book_title' 		=> $publication->title,
				'publisher' 		=> $section->publisher,
				'element' 			=> $eid,
				'publication_date' 	=> $section->publication_date,
				'editor' 			=> $section->editor,
				'url'				=> ""
			)
		));
		return;
	}
	else {
		print json_encode(array('success' => FALSE));
	}
}

function osci_tk_citations_demo() {
	global $user;
	drupal_add_js(drupal_get_path('module', 'osci_tk_citations') . '/js/demo.js');

	$form = array();

	$form['retrieve'] = array(
		'#type'				=> 'fieldset',
		'#title'			=> 'Retrieve Citation Data',
		'#attributes'		=> array('class' => array('retrieve-form'))
	);
	$form['retrieve']['publication_id'] = array(
		'#type'				=> 'textfield',
		'#title'			=> 'Publication id',
	);
	$form['retrieve']['section_id'] = array(
		'#type'				=> 'textfield',
		'#title'			=> 'Section id',
	);
	$form['retrieve']['element_id'] = array(
		'#type'				=> 'textfield',
		'#title'			=> 'Element id',
	);
	$form['retrieve']['revision'] = array(
		'#type'				=> 'textfield',
		'#title'			=> 'Revision timestamp',
		'#default_value'			=> time()
	);
	$form['retrieve']['submit'] = array(
			'#type'			=> 'button',
			'#title'		=> 'Paragraph id',
			'#value'		=> 'Submit',
			'#required'		=> TRUE
	);
	$form['retrieve']['result'] = array(
			'#type'			=> 'item',
			'#title'		=> 'Result',
			'#markup'		=> '<pre style="width: 600px;"><div id="ret-result"></div></pre>'
	);

	return $form;
}